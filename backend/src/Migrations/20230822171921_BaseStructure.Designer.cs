// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230822171921_BaseStructure")]
    partial class BaseStructure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("backend.Models.Access", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataFim")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DataInicio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Access");
                });

            modelBuilder.Entity("backend.Models.EmotionDiaryEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sentimentos")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmotionDiaryEntry");
                });

            modelBuilder.Entity("backend.Models.MealDiaryEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompensatoryBehaviors")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentsOfMeal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FeelingsAroundMeal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("HadAnEpisode")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HadCompensatoryBehaviour")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("PlainAttention")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reflexao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("RestrainedConsumption")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SkippedMeal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimeOfMeal")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoRefeicao")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MealDiaryEntry");
                });

            modelBuilder.Entity("backend.Models.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<string>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int>("ModuleNumberOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Recompensa")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Satisfacao")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Utilidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Modulo");
                });

            modelBuilder.Entity("backend.Models.SubModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<string>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SubModule")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SubModuleFavorites")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubModuleNumberOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubModule");

                    b.HasIndex("SubModuleFavorites");

                    b.ToTable("SubModule");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("backend.Models.Access", b =>
                {
                    b.HasOne("backend.Models.User", null)
                        .WithMany("Accesses")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("backend.Models.EmotionDiaryEntry", b =>
                {
                    b.HasOne("backend.Models.User", null)
                        .WithMany("EmotionDiaryEntries")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("backend.Models.MealDiaryEntry", b =>
                {
                    b.HasOne("backend.Models.User", null)
                        .WithMany("FoodDiaryEntries")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("backend.Models.Modulo", b =>
                {
                    b.HasOne("backend.Models.User", null)
                        .WithMany("Modulos")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("backend.Models.SubModule", b =>
                {
                    b.HasOne("backend.Models.EmotionDiaryEntry", null)
                        .WithMany("Exercicios")
                        .HasForeignKey("SubModule");

                    b.HasOne("backend.Models.Modulo", null)
                        .WithMany("SubModules")
                        .HasForeignKey("SubModule");

                    b.HasOne("backend.Models.Modulo", null)
                        .WithMany("FavoriteSubModules")
                        .HasForeignKey("SubModuleFavorites");
                });

            modelBuilder.Entity("backend.Models.EmotionDiaryEntry", b =>
                {
                    b.Navigation("Exercicios");
                });

            modelBuilder.Entity("backend.Models.Modulo", b =>
                {
                    b.Navigation("FavoriteSubModules");

                    b.Navigation("SubModules");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Navigation("Accesses");

                    b.Navigation("EmotionDiaryEntries");

                    b.Navigation("FoodDiaryEntries");

                    b.Navigation("Modulos");
                });
#pragma warning restore 612, 618
        }
    }
}
